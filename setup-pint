#!/bin/bash

set -e
trap cleanup INT TERM

CLEANUP_REQUIRED=false

cleanup() {
	echo -e "\nScript interrupted. Cleaning up..."

	if [ "$CLEANUP_REQUIRED" = true ]; then
		echo "Removing laravel/pint..."
		composer remove laravel/pint --dev
	fi

	echo "Script exited before completion."
	exit 130
}

ENV_FILE="$(dirname "$(realpath "$0")")/.env"

# Check if .env exists in this script's directory
if [ ! -f "$ENV_FILE" ]; then
	echo ".env file is missing."
	exit 1
fi

source "$ENV_FILE"

# Ensure PINT_CONFIG_URL is set
if [ -z "${PINT_CONFIG_URL:-}" ]; then
	echo "PINT_CONFIG_URL is not set in $ENV_FILE"
	exit 1
fi

# Install Laravel Pint if not already in require-dev
if awk '/"require-dev"/,/\}/' composer.json | grep -q '"laravel/pint"'; then
	echo "laravel/pint already present in require-dev."
else
	composer require laravel/pint --dev
	CLEANUP_REQUIRED=true
fi

# Download custom rules, check if pint.json already exists
CONFIG_FILE="pint.json"

if [ -f "$CONFIG_FILE" ]; then
	echo "$CONFIG_FILE already exists."
	read -rp "Do you want to overwrite it with the remote version? [y/n]: " choice
	case "$choice" in
	y | Y)
		curl -o "$CONFIG_FILE" "$PINT_CONFIG_URL"
		echo "$CONFIG_FILE overwritten."
		;;
	*) echo "Skipped downloading $CONFIG_FILE." ;;
	esac
else
	curl -o "$CONFIG_FILE" "$PINT_CONFIG_URL"
	echo "$CONFIG_FILE downloaded."
fi

echo "Pint installed and custom rules handled."
