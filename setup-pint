#!/usr/bin/env bash

set -e
trap cleanup INT TERM

CLEANUP_REQUIRED=false
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'
ENV_FILE="$(dirname "$(realpath "$0")")/.env"
CONFIG_FILE="pint.json"
COMPOSER_FILE="composer.json"
PINT_PACKAGE="laravel/pint"

color_echo() {
	local color="$1"
	shift
	echo -e "${color}$*${NC}"
}

confirm() {
	local message="$*"
	local result=''

	echo -e -n "> $message [${YELLOW}Y${NC}/${YELLOW}n${NC}]: " >&2

	while [[ -z "$result" ]]; do
		read -r -s -n 1 choice
		case "$choice" in
		y | Y | "") result='Y' ;;
		n | N) result='N' ;;
		esac
	done

	echo "$result"
}

cleanup() {
	echo ""

	if [[ "$CLEANUP_REQUIRED" = true ]]; then
		color_echo "$YELLOW" "Script interrupted. Cleaning up..."
		composer remove "$PINT_PACKAGE" --dev
	fi

	echo "Exiting"
	exit 130
}

# Check if .env exists in this script's directory
if [[ ! -f "$ENV_FILE" ]]; then
	color_echo "$RED" ".env file is missing"
	exit 1
fi

source "$ENV_FILE"

# Ensure PINT_CONFIG_URL is set
if [[ -z "${PINT_CONFIG_URL:-}" ]]; then
	color_echo "$RED" "PINT_CONFIG_URL is not set in $ENV_FILE"
	exit 1
fi

# Check composer.json exists
if [ ! -f "$COMPOSER_FILE" ]; then
	color_echo "$RED" "$COMPOSER_FILE not found"
	exit 1
fi

# Install Laravel Pint if not already in require-dev
if awk '/"require-dev"/,/\}/' $COMPOSER_FILE | grep -q $PINT_PACKAGE; then
	echo -e "${GREEN}$PINT_PACKAGE${NC} is already a dev requirement in ${GREEN}$COMPOSER_FILE${NC}"
else
	composer require "$PINT_PACKAGE" --dev
	CLEANUP_REQUIRED=true
fi

# Download custom rules, check if pint.json already exists
if [[ -f "$CONFIG_FILE" ]]; then
	case $(confirm "${GREEN}$CONFIG_FILE${NC} already exists, do you want to overwrite it?") in
	Y)
		color_echo "$YELLOW" "Yes"
		curl -s -o "$CONFIG_FILE" "$PINT_CONFIG_URL"
		echo -e "${GREEN}$CONFIG_FILE${NC} overwritten"
		;;
	N)
		color_echo "$YELLOW" "No"
		color_echo "$YELLOW" "$CONFIG_FILE not overwritten"
		echo ""
		exit
		;;
	esac
else
	curl -s -o "$CONFIG_FILE" "$PINT_CONFIG_URL"
	echo -e "${GREEN}$CONFIG_FILE${NC} downloaded"
fi

color_echo "$GREEN" "Pint installed and custom rules set up in $CONFIG_FILE"
echo ""
